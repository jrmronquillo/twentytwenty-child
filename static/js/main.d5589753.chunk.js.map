{"version":3,"sources":["logo.svg","Components/Content/index.js","Components/Navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Content","className","this","props","containerStyling","subText","titleText","href","id","focusedButton","buttonText","downArrowDisplay","icon","faArrowAltCircleDown","Component","Navbar","iconography2","iconography1","App","state","title","subText1","ctas","bg","handleKeydown","bind","selectCall","event","keyCode","setState","console","log","url","window","location","document","addEventListener","faLinkedin","faGit","faEnvelope","React","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d5589753.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog, faArrowLeft, faArrowAltCircleLeft, faArrowAltCircleRight, faArrowAltCircleDown} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Content extends Component {\r\n  render() {\r\n    // ...\r\n    return (\r\n      <div className={this.props.containerStyling}>\r\n        <div className=\"sub-text r-padding\">{this.props.subText}</div>\r\n      \t<div className=\"sub-title r-padding\">{this.props.titleText}</div>\r\n        \r\n        <div className=\"button-section r-padding\">\r\n        \t<a href=\"/blog\"><button id=\"button2\" className={this.props.focusedButton === 1 ? 'button-text-focused': 'button-text'}>{this.props.buttonText}</button></a>\r\n        </div>\r\n\r\n        <div className={this.props.downArrowDisplay === 'true' ? \"arrows-container bounce\" : \"display-none\"}>\r\n          <span className=\"arrows-item\"><FontAwesomeIcon className=\"\" icon={faArrowAltCircleDown} /></span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    // ...\r\n    return (\r\n      <div id=\"navbar-container\">\r\n        <div id=\"nav-title\"> Jerome Ronquillo</div>\r\n        <div className=\"icons-container\">\r\n          <a href=\"https://github.com/jrmronquillo\">\r\n            <FontAwesomeIcon className=\"iconography\" \r\n            icon={this.props.iconography2} />\r\n          </a>\r\n          <a href=\"https://www.linkedin.com/in/jerome-ronquillo-4063bb76/\">\r\n            <FontAwesomeIcon className=\"iconography\" \r\n            icon={this.props.iconography1} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Content from './Components/Content'\r\nimport Navbar from './Components/Navbar'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faReact, faGit, faHtml5, faJs, faCss3, faPython, faUbuntu, faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\nimport { faCog, faArrowLeft, faArrowAltCircleLeft, faEnvelope} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      title: 'Front End Developer',\r\n      subText1: \"Hi, I am a \",\r\n      ctas: ['http://linkedin.com','/blog'],\r\n      focusedButton: 0,\r\n      bg: true,\r\n    };\r\n\r\n    this.handleKeydown = this.handleKeydown.bind(this);\r\n    this.selectCall = this.selectCall.bind(this);\r\n  }\r\n\r\n  handleKeydown(event){\r\n    // console.log(event);\r\n    switch(event.keyCode){\r\n      case 37:\r\n        // left arrow\r\n        this.setState({\r\n          focusedButton: 0,\r\n        });\r\n        break;\r\n      case 39:\r\n        // right arrow\r\n        this.setState({\r\n          focusedButton: 1,\r\n        });\r\n        break;\r\n      case 13:\r\n        // enter\r\n        console.log('enter submitted');\r\n        this.selectCall();\r\n        break;\r\n      default:\r\n        console.log('unsupported keydown: '+event.keyCode);\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  selectCall(){\r\n    console.log(this.state.ctas[this.state.focusedButton]);\r\n    var url = this.state.ctas[this.state.focusedButton] \r\n    window.location.href=url;\r\n    \r\n  }\r\n\r\n  componentDidMount(){\r\n    document.addEventListener('keydown', this.handleKeydown)\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Navbar iconography1={faLinkedin} iconography2={faGit} />\r\n      </header>\r\n      <main>\r\n\r\n        <Content containerStyling='portfolio-1 bg-1 text-left'\r\n         focusedButton={this.state.focusedButton} \r\n         titleText={this.state.title} \r\n         subText={this.state.subText1} buttonText='View Projects' downArrowDisplay='true' />\r\n        <Content containerStyling='portfolio-1 bg-2 text-right'\r\n         titleText='Work' subText='View the way I' buttonText='View Github' downArrowDisplay='false'/>\r\n        \r\n\r\n\r\n      </main>\r\n      <footer>\r\n        <div id='footer-container'>\r\n          <div id=\"About\" className=\"footer-section\">\r\n            <div className=\"footer-title\"> About </div>\r\n            <div className=\"footer-text\">\r\n             Jerome Ronquillo is a Front End Developer based in Los Angeles, CA.\r\n             His specialty is React.\r\n            </div>\r\n\r\n          </div>\r\n          <div id=\"Skills \" className=\"footer-section\">\r\n            <div className=\"footer-title\"> Photography </div>\r\n            <div className=\"footer-text\">\r\n              When I'm away from a keyboard, I enjoy doing a bit a photography. \r\n            </div>\r\n          </div>\r\n          <div id=\"Contact\" className=\"footer-section\">\r\n            <div className=\"footer-title\"> Contact </div>\r\n            <div className=\"footer-text\">\r\n              <div>\r\n                If you have any questions, feel free to contact me. I am open to \r\n                opportunies and I just like helping when I can. Below is my email:\r\n              </div>\r\n              <a href=\"mailto:jerome.ong.ronquillo@gmail.com\">\r\n                <FontAwesomeIcon className=\"footer-icon\" icon={faEnvelope} />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>  \r\n      </footer>\r\n        \r\n      \r\n    </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}